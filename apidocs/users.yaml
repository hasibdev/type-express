components:
   schemas:
      User:
         type: object,
         required: [firstName, lastName, email, password]
         properties:
            _id:
               type: string
               description: Auto generated id
            firstName:
               type: string
               description: First Name
            lastName:
               type: string
               description: Last Name
            email:
               type: string
               description: E-mail Address
            password:
               type: string
               description: Password
            phone:
               type: string
               description: Phone Number
         example:
            _id: 61f276d5a0fdcfd610aab2e8
            firstName: First Name
            lastName: Last Name
            email: john@gmail.com
            phone: 0123456789
            verified: false
            verifiedAt: 2022-01-27T10:41:25.454Z
            blocked: false
            guard: users
            createdAt: 2022-01-27T10:41:25.454Z
            updatedAt: 2022-01-27T10:41:25.454Z

tags:
   - name: Users
     description: Manage Users api

paths:
   /api/users:
      # Get all Users
      get:
         summary: Returns the list of users.
         tags: [Users]
         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        type: array
                        items:
                           $ref: "#/components/schemas/User"
            500:
               description: Some error happened

      # Create new User
      post:
         summary: Create new User
         tags: [Users]
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     type: object
                     example:
                        firstName: First Name
                        lastName: Last Name
                        email: john@gmail.com
                        phone: 0123456789
                        password: 123456
                        confirmed_password: 123456
         responses:
            201:
               description: User Created
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/User"
            422:
               description: Validation Errors
            500:
               description: Some error happened

   /api/users/{id}:
      # Get Single user by id
      get:
         summary: Get the user by id
         tags: [Users]
         parameters:
            - in: path
              name: id
              required: true
              description: User id
              schema:
                 type: string

         responses:
            200:
               description: Success
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/User"
            404:
               description: Not found
               content:
                  application/json:
                     schema:
                        type: object
                        example:
                           message: User not found!
            500:
               description: Some error happened

      # Update user
      put:
         summary: Update User
         tags: [Users]
         parameters:
            - in: path
              name: id
              required: true
              description: User id
              schema:
                 type: string
         requestBody:
            required: true
            content:
               application/json:
                  schema:
                     type: object
                     example:
                        firstName: First Name
                        lastName: Last Name
                        email: john@gmail.com
                        phone: 0123456789
         responses:
            200:
               description: User Updated
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/User"
            422:
               description: Validation Errors
            500:
               description: Some error happened

      # Delete User
      delete:
         summary: Delete User
         tags: [Users]
         parameters:
            - in: path
              name: id
              required: true
              description: User id
              schema:
                 type: string
         responses:
            200:
               description: User Deleted
               content:
                  application/json:
                     schema:
                        type: object
                        example:
                           message: Deleted Successfully!
            404:
               description: Not Found
               content:
                  application/json:
                     schema:
                        type: object
                        example:
                           message: User not found!
            500:
               description: Some error happened
